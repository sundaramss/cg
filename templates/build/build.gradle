apply plugin: 'java'
apply plugin: 'war'


def springVersion = "${config.softwareStack.springVersion}"
def sourceCompatibility = "${config.softwareStack.sourceCompatibility}"
def slf4jVersion = "${config.softwareStack.slf4jVersion}"

repositories {
    mavenCentral()
}

sourceSets {
        generated
}

sourceSets.generated.java.srcDirs = ['src/main/generated']

configurations {
        jpametamodel
}

dependencies{

    compile "org.springframework:spring-webmvc:\$springVersion"
    compile "org.springframework:spring-tx:\$springVersion"
    compile "org.springframework:spring-orm:\$springVersion"
    compile "javax.servlet:jstl:1.1.2","taglibs:standard:1.1.2"
    compile "commons-beanutils:commons-beanutils:20030211.134440"
    compile "org.hibernate.javax.persistence:hibernate-jpa-2.0-api:1.0.1.Final"
    compile "org.hibernate:hibernate-entitymanager:4.1.4.Final"
    compile "org.hibernate:hibernate-validator:4.3.0.Final"
    compile "org.codehaus.jackson:jackson-mapper-asl:1.9.7"
    compile "log4j:log4j:1.2.16"
    jpametamodel 'org.hibernate:hibernate-jpamodelgen:4.3.5.Final'
    runtime "log4j:log4j:1.2.16"
    runtime "org.aspectj:aspectjrt:1.8.0"

}

task generateMetaModel(type: JavaCompile, group: 'build', description: 'Generates the MetaModels') {

        source = sourceSets.main.java
        classpath = configurations.compile + configurations.jpametamodel
        options.compilerArgs = [
            "-proc:only"
            ]
        destinationDir = sourceSets.generated.java.srcDirs.iterator().next()

}

compileJava.dependsOn generateMetaModel
