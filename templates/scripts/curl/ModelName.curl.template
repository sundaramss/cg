<%
	def fields=[:]
	def sortFields=[:]
    def manyToOneFields = modelData.columns.findAll{it.manyToOne};
    def manyToOneModels = modelHelper.getManyToOne(manyToOneFields,models);
	modelData.columns.each{ column ->
        if( ! column.manyToOne ){
            fields.put(modelHelper.getVariableRef(column),""); 
            if(column.sort){
                sortFields.put(modelHelper.getVariableRef(column),"true"); 
            }
        }else{
            def manyToOneModel = manyToOneModels.find{ model -> model.className == column.type };
            //def parentModelFields = [:]; 
            manyToOneModel.columns.each { parentColumn ->
                    if( ! parentColumn.manyToOne ){
                        fields.put(modelHelper.getVariableRef(["name":parentColumn.formName]),""); 
                    }                
            }
            //fields.put(modelHelper.getVariableRef(column),parentModelFields); 
        }
	}
	def url = "http://localhost:7070/${config.project.name}/rest/${modelData.className.toLowerCase()}/";
	def jsonData=modelHelper.prepareJson(fields).replace("\"","\\\"")
	def sortFieldsJsonData = modelHelper.prepareJson(sortFields).replace("\"","\\\"").replace("{","\\{").replace("}","\\}")
%>

curl -i -k -X GET "$url" 
<%if(sortFields.size()>0){%>
curl -i -k -X GET "$url?sb=$sortFieldsJsonData&fb=$jsonData" 
<%}%>
curl -i -k -X POST "$url" -H "Content-Type:application/json; charset=utf-8"  -H "Accept: application/json" -d "$jsonData"

curl -i -k -X GET "$url<skguid>" -H "Accept: application/json"

curl -i -k -X PUT "${url}<skguid>" -H "Content-Type:application/json; charset=utf-8"  -H "Accept: application/json" -d "$jsonData"

curl -i -k -X DELETE "${url}<skguid>" -H "Accept: application/json"  



