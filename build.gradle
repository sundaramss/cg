apply plugin: 'java'
apply plugin: 'war'

loadConfigFile();

task "create-dirs" << {
	webAppDir.mkdirs();
	sourceSets*.java.srcDirs*.each { it.mkdirs() }    
	sourceSets*.resources.srcDirs*.each{ it.mkdirs() }
}

task "create-basepackage"(dependsOn: 'create-dirs') << {
	def mainJavaDir = sourceSets['main'].java.srcDirs.iterator()[0]
        def packageFolder=config.project.packageName.replaceAll('\\.',File.separator) 
	def  baseDir =  new File(mainJavaDir,packageFolder)
	baseDir.mkdirs()
	project.ext.baseDir=baseDir
        
}

task  "create-apppackage"(dependsOn:'create-basepackage') << {
        println project.ext.baseDir
        println config.project.appPackage
	def packages= config.project.appPackage.collect { f= new File(project.ext.baseDir,it); f.mkdirs(); f}
	println packages
	//packages.each { it.mkdirs() }
}
task cg(dependsOn: 'create-apppackage')  << {
//	println "package:$config"
	println "package:$config.project.packageName"

}

def loadConfigFile() {
	def softwareStack = hasProperty('env') ? env : 'spring_RESTful'
	setProperty 'softwareStack', softwareStack
	println "Software Stack is set to $softwareStack"
	def configFile = file('config.groovy')
	def config = new ConfigSlurper(softwareStack).parse(configFile.toURL())
	setProperty 'config', config
}
